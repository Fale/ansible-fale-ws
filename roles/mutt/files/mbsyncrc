IMAPAccount gmail
# Address to connect to
Host imap.gmail.com
User fabiolocati@gmail.com
PassCmd "/usr/bin/pass mail/gmail/mutt"
# Use SSL
AuthMechs PLAIN
SSLType IMAPS
SSLVersions TLSv1 TLSv1.1 TLSv1.2
CertificateFile /etc/ssl/certs/ca-bundle.crt

IMAPStore gmail-remote
Account gmail

MaildirStore gmail-local
# The trailing "/" is important
Path ~/.mail/gmail/
Inbox ~/.mail/gmail/Inbox

Channel gmail
Master :gmail-remote:
Slave :gmail-local:
# Exclude certain things
Patterns * !@* !howard-eagle ![Gmail]*
# Or include everything
#Patterns *
# Automatically create missing mailboxes, both locally and on the server
Create Both
# Save the synchronization state files in the relevant directory
SyncState *

IMAPAccount redhat
# Address to connect to
Host imap.gmail.com
User flocati@redhat.com
PassCmd "/usr/bin/pass mail/redhat/t460s"
# Use SSL
AuthMechs PLAIN
SSLType IMAPS
SSLVersions TLSv1 TLSv1.1 TLSv1.2
CertificateFile /etc/ssl/certs/ca-bundle.crt

IMAPStore redhat-remote
Account redhat

MaildirStore redhat-local
# The trailing "/" is important
Path ~/.mail/redhat/
Inbox ~/.mail/redhat/Inbox

Channel redhat
Master :redhat-remote:
Slave :redhat-local:
# Exclude certain things
Patterns * !@* !howard-eagle ![Gmail]*
# Or include everything
#Patterns *
# Automatically create missing mailboxes, both locally and on the server
Create Both
# Save the synchronization state files in the relevant directory
SyncState *

IMAPAccount fale
# Address to connect to
Host imap.kolabnow.com
User me@fale.io
PassCmd "/usr/bin/pass mail/fale/pass"
# Use SSL
AuthMechs PLAIN
SSLType IMAPS
SSLVersions TLSv1 TLSv1.1 TLSv1.2
CertificateFile /etc/ssl/certs/ca-bundle.crt

IMAPStore fale-remote
Account fale

MaildirStore fale-local
# The trailing "/" is important
Path ~/.mail/fale/
Inbox ~/.mail/fale/Inbox

Channel fale
Master :fale-remote:
Slave :fale-local:
# Exclude certain things
Patterns * !Calendar !Configuration !Contacts !Files !Journal !Notes !Sent_RESTORED !Tasks
# Or include everything
#Patterns *
# Automatically create missing mailboxes, both locally and on the server
Create Both
# Save the synchronization state files in the relevant directory
SyncState *
